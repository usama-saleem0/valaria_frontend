import React, { useEffect, useState } from "react";

import Recommends from "../img/Recommend-1.png";

import office from "../img/office-logo.png";
import Assistant from "../img/Assistant.png";
import axios from "axios";
import { baseurl } from "../baseurl";
import { useNavigate } from "react-router-dom";


const Cardah3 = ({sortOrder, setJobTypeFilter, jobTypeFilter }) => {
  const navigate = useNavigate();


    const handleNavigateToSubscription = () => {
        navigate('/subscription'); // Redirect to the subscription page
      };



      

    const [appliedJob, setappliedJob] = useState([]);
    const storedUser = localStorage.getItem('userData');


    useEffect(() => {
        // Retrieve user data from local storage
        if (storedUser) {
          try {
            const user = JSON.parse(storedUser);
            console.log('User:', user);
    
            if (user && user.id) {
              // Call fetchUserData only if user ID exists
              fetchUserData(user.id);
            } else {
              console.warn('User ID is missing.');
            }
          } catch (error) {
            console.error('Error parsing stored user data:', error);
          }
        } else {
          console.warn('No user found in local storage.');
        }
      }, []); // Empty dependency array ensures it runs once when the component mounts
    
      const fetchUserData = async (userId) => {
        try {
          const response = await axios.get(`${baseurl}/jobbyuserid/${userId}`);
          console.log('API Response:', response.data);
          setappliedJob(response.data);

        } catch (error) {
          console.error('Error fetching user data:', error);
        }
      };
    
      const calculateHoursAgo = (createdAt) => {
        const createdDate = new Date(createdAt);
        const currentDate = new Date();
        const diffInMilliseconds = currentDate - createdDate;
        const diffInHours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));
        return diffInHours;
      };
    
      
    

      const sortJobs = (jobs) => {
        return jobs.sort((a, b) => {
          const dateA = new Date(a.createdAt);  // Use createdAt for sorting
          const dateB = new Date(b.createdAt);
      
          if (sortOrder === 'Newest') {
            return dateB - dateA;  // Sort by newest first
          } else {
            return dateA - dateB;  // Sort by oldest first
          }
        });
      };
    
      const filteredAndSortedJobs = sortJobs(
        appliedJob.filter(job => jobTypeFilter === '' || job.Job.jobType === jobTypeFilter)
      );

      

    return (
        <>
        {
       filteredAndSortedJobs.map((job, index) => (
       
           <div>

       {

        job.User.subscription === 1 || job.User.subscription === "1" ?



      
<div class="Applied-ah-card">
    <div class="Applied-ah-logo">
        <img src={Assistant} alt="" />
    </div>

    <div class="Applied-ah-tital">
        <div class="Applied-ah-list-1">
            <span>
                <h2>{job.Job.jobTitle}</h2>
                <p>{job.Job.jobType}</p>
            </span>

            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="21"
                height="26"
                viewBox="0 0 21 26"
                fill="none"
            >
                <path
                    d="M13.8423 3.42105C13.8423 5.31045 12.3106 6.8421 10.4212 6.8421C8.53181 6.8421 7.00015 5.31045 7.00015 3.42105C7.00015 1.53166 8.53181 0 10.4212 0C12.3106 0 13.8423 1.53166 13.8423 3.42105Z"
                    fill="#828282"
                />
                <path
                    d="M13.8421 13C13.8421 14.8894 12.3104 16.421 10.4211 16.421C8.53166 16.421 7 14.8894 7 13C7 11.1106 8.53166 9.57893 10.4211 9.57893C12.3104 9.57893 13.8421 11.1106 13.8421 13Z"
                    fill="#828282"
                />
                <path
                    d="M13.8421 22.5789C13.8421 24.4683 12.3104 26 10.4211 26C8.53166 26 7 24.4683 7 22.5789C7 20.6895 8.53166 19.1579 10.4211 19.1579C12.3104 19.1579 13.8421 20.6895 13.8421 22.5789Z"
                    fill="#828282"
                />
            </svg>
        </div>

        <div class="Applied-ah-list-2">
            <span>
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="14"
                    height="17"
                    viewBox="0 0 14 17"
                    fill="none"
                >
                    <path
                        d="M0.167969 7.01707C0.167969 3.80989 1.95855 1.30711 4.69384 0.43728C8.63751 -0.822113 12.7459 1.41918 13.482 5.45884C13.8664 7.55071 13.3446 9.43446 11.966 11.0834C10.4885 12.8498 8.98354 14.6001 7.49505 16.3611C7.0941 16.8361 6.67666 16.8361 6.27021 16.3611C4.73229 14.5467 3.1779 12.743 1.66195 10.9073C0.645822 9.68528 0.184446 8.25512 0.167969 7.01707ZM6.87989 3.92729C5.41886 3.93263 4.24345 5.08529 4.24895 6.50478C4.25444 7.90825 5.44633 9.04491 6.90186 9.03957C8.3464 9.03423 9.5328 7.87623 9.52181 6.47276C9.51083 5.06395 8.32443 3.92195 6.87989 3.92729Z"
                        fill="#194D79"
                    />
                </svg>
                <p>{job.Job.yearofexperience}</p>
            </span>

            <span>
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 18 18"
                    fill="none"
                >
                    <path
                        d="M8.51296 0.834656C8.86521 0.834656 9.21745 0.834656 9.56969 0.834656C9.61372 0.843462 9.65335 0.856671 9.69738 0.861074C10.1289 0.927119 10.5692 0.966747 10.9963 1.06361C14.2457 1.80773 16.8039 4.52439 17.3542 7.81346C17.4071 8.12167 17.4379 8.42988 17.4819 8.7425C17.4819 9.09474 17.4819 9.44698 17.4819 9.79922C17.4731 9.83004 17.4599 9.86086 17.4555 9.89169C17.3983 10.2836 17.3675 10.6798 17.2838 11.0629C16.1742 16.2937 10.4107 19.1865 5.55853 16.9585C1.97447 15.3162 0.0151191 11.512 0.763634 7.64174C1.41969 4.23379 4.16718 1.54354 7.58833 0.962344C7.89654 0.909507 8.20475 0.878686 8.51296 0.834656ZM10.3578 11.1113C10.3622 11.8202 9.78544 12.419 9.08976 12.4366C8.35445 12.4542 7.75564 11.8995 7.72042 11.1642C7.70721 10.8119 7.48706 10.583 7.17444 10.5918C6.87063 10.6006 6.65489 10.8559 6.66369 11.1994C6.68571 12.1681 7.34176 13.0487 8.2708 13.3569C8.44252 13.4141 8.53058 13.4978 8.50856 13.6871C8.49535 13.7884 8.50416 13.894 8.50856 13.9997C8.51296 14.3123 8.73752 14.5413 9.03252 14.5457C9.31872 14.5501 9.55208 14.3123 9.56529 14.0085C9.56969 13.9117 9.56529 13.8104 9.56529 13.7135C9.56529 13.4493 9.56529 13.4493 9.81186 13.3613C11.3617 12.8109 11.9121 10.9308 10.895 9.64952C10.4283 9.05951 9.80305 8.76451 9.05013 8.7469C8.32804 8.72929 7.75564 8.19212 7.72042 7.50084C7.68519 6.77874 8.24438 6.14911 8.95327 6.11389C9.70178 6.07426 10.3226 6.63785 10.3534 7.38636C10.3666 7.73861 10.5868 7.96756 10.8994 7.95876C11.2032 7.94995 11.4322 7.69457 11.4014 7.35114C11.3793 7.10017 11.3397 6.84479 11.2561 6.61143C10.9919 5.89374 10.4811 5.41381 9.75462 5.17164C9.61812 5.12761 9.55648 5.05716 9.56529 4.91186C9.57409 4.78417 9.56969 4.66089 9.56529 4.5332C9.55648 4.23379 9.33193 4.00924 9.04133 4.00484C8.76394 4.00043 8.53058 4.22499 8.51296 4.51118C8.50416 4.63007 8.49976 4.75335 8.51296 4.87223C8.53058 5.05276 8.44692 5.13642 8.2796 5.18925C7.08198 5.58552 6.40832 6.8624 6.75616 8.07323C7.04676 9.08593 7.94938 9.78161 9.01051 9.80363C9.77663 9.81683 10.3534 10.376 10.3578 11.1113Z"
                        fill="#194D79"
                    />
                </svg>
                <p>${job.Job.yearlySalary}</p>
                
            </span>

            <span>
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="15"
                    viewBox="0 0 18 15"
                    fill="none"
                >
                    <path
                        d="M0.480469 12.5717C0.480469 10.7218 0.480469 8.87186 0.480469 7.01756C0.497921 7.02192 0.51101 7.02192 0.528462 7.02629C3.1114 7.88581 5.69433 8.74533 8.27291 9.60922C8.64813 9.73575 9.01463 9.74011 9.38985 9.61795C11.9335 8.76715 14.4815 7.92071 17.0252 7.07428C17.0776 7.05683 17.1343 7.03938 17.191 7.02192C17.1954 7.05683 17.1997 7.07428 17.1997 7.09173C17.1997 8.85877 17.2041 10.6302 17.191 12.3972C17.191 12.6416 17.1256 12.899 17.0209 13.1215C16.6544 13.8894 16.0261 14.2515 15.1753 14.2472C10.9562 14.2428 6.74147 14.2472 2.52238 14.2472C2.44821 14.2472 2.36968 14.2472 2.2955 14.2428C1.48834 14.2123 0.764068 13.6363 0.550278 12.8553C0.528462 12.7637 0.506647 12.6677 0.480469 12.5717ZM0.480469 5.90934C0.493558 5.91807 0.51101 5.92679 0.524099 5.93116C3.22484 6.82995 5.92558 7.7331 8.63068 8.62317C8.76593 8.6668 8.93609 8.66244 9.07135 8.61881C11.7372 7.73747 14.403 6.8474 17.0688 5.9617C17.1779 5.92679 17.2041 5.87444 17.2041 5.76536C17.1997 5.3116 17.1997 4.86221 17.1997 4.40845C17.1997 3.22606 16.3838 2.4058 15.2015 2.4058C14.0758 2.4058 12.9501 2.4058 11.8201 2.4058C11.759 2.4058 11.6935 2.4058 11.6237 2.4058C11.6237 2.17892 11.6281 1.98694 11.6237 1.79061C11.6194 1.6728 11.6194 1.55064 11.5976 1.43284C11.4579 0.765286 10.9169 0.320253 10.2188 0.31589C9.29823 0.307164 8.37762 0.311527 7.45701 0.31589C7.36102 0.31589 7.26067 0.324616 7.16469 0.342068C6.51459 0.481687 6.07392 1.00962 6.05647 1.6728C6.04774 1.90841 6.05647 2.14838 6.05647 2.40144C5.96921 2.40144 5.90376 2.40144 5.83831 2.40144C4.69519 2.40144 3.55207 2.39707 2.40894 2.40144C1.54506 2.41453 0.820788 2.94246 0.56773 3.75399C0.532826 3.86306 0.506647 3.97214 0.480469 4.08122C0.480469 4.69205 0.480469 5.30288 0.480469 5.90934ZM7.45265 1.7208C8.37326 1.7208 9.29386 1.7208 10.2276 1.7208C10.2276 1.94331 10.2276 2.16147 10.2276 2.39707C9.30695 2.39707 8.39071 2.39707 7.45265 2.39707C7.45265 2.16583 7.45265 1.95204 7.45265 1.7208Z"
                        fill="#194D79"
                    />
                </svg>
                <p>{job.Job.jobType} </p>

              
            </span>
        </div>

        <div class="Applied-ah-list-3">
            {job.rejected == 1 ?

            <button>Reject</button>
            :

            <button>Applied</button>

            }

            <a href="#">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="17"
                    viewBox="0 0 18 17"
                    fill="none"
                >
                    <path
                        d="M17.8358 8.96047C17.7542 10.3524 17.3933 11.6025 16.7575 12.6765C16.1174 13.7591 15.1895 14.6741 14.0081 15.3872C12.685 16.1863 11.3017 16.5944 9.90549 16.5944C8.76276 16.5944 7.58997 16.3194 6.42147 15.7825C5.3303 15.2798 4.38948 14.498 3.62051 13.4497C3.34127 13.0674 3.39712 12.5991 3.75368 12.3371C4.11024 12.0707 4.57421 12.1567 4.85774 12.5304C5.86729 13.875 7.19904 14.687 8.81002 14.9361C11.8601 15.4087 14.7599 13.7591 15.8597 10.9194C17.0153 7.93804 15.8382 4.60867 13.063 2.99339C10.5155 1.51988 7.10452 2.05258 5.12839 4.24781C4.44533 5.00819 3.95989 5.87598 3.68924 6.83827C3.96418 6.73087 4.27779 6.79102 4.49688 7.00581C4.64724 7.15188 4.72886 7.3409 4.72886 7.54281C4.72886 7.75331 4.64294 7.95522 4.48399 8.11847C4.14032 8.46644 3.68494 8.92181 3.21669 9.38148C3.04055 9.55761 2.81716 9.63923 2.58948 9.61775C2.36609 9.59628 2.16847 9.47599 2.031 9.27408C1.76465 8.88315 1.4983 8.48362 1.24484 8.10128C1.16322 7.9767 1.0773 7.84782 0.995676 7.72324C0.965605 7.68028 0.944125 7.63732 0.922645 7.59866C0.914053 7.58577 0.905461 7.56858 0.896869 7.5557L0.871094 7.49555V7.10892L0.901165 7.05307C1.15033 6.58051 1.53697 6.40868 1.93649 6.5934C2.00952 6.62777 2.07396 6.67503 2.12981 6.72658C2.90308 3.74948 4.7933 1.79482 7.74462 0.909853C9.22243 0.46737 10.8076 0.493146 12.3284 0.991477C13.8406 1.48551 15.1466 2.39196 16.1088 3.61631C17.3676 5.2144 17.9475 7.01441 17.8358 8.96047ZM10.3909 4.2607C10.3909 3.78814 10.0687 3.44447 9.62195 3.44017H9.61766C9.41145 3.44017 9.22243 3.5175 9.08066 3.65497C8.93031 3.80533 8.84439 4.01583 8.84439 4.25211C8.84439 4.84495 8.84439 5.43779 8.84439 6.03063V6.18099C8.84439 7.05307 8.84439 7.92944 8.84439 8.80152C8.84439 9.10224 8.96897 9.34711 9.21384 9.52754C9.64343 9.84114 10.073 10.1676 10.494 10.4812C10.6487 10.5972 10.8076 10.7175 10.9623 10.8335C11.0955 10.9323 11.2286 11.0354 11.3661 11.1342C11.6496 11.3447 11.9289 11.5595 12.2124 11.7657C12.3585 11.8774 12.5174 11.929 12.6807 11.929C12.8181 11.929 12.9556 11.8903 13.0845 11.8087C13.3551 11.6454 13.4883 11.3576 13.4411 11.0311C13.4024 10.7605 13.2263 10.5929 13.0716 10.4769C12.7451 10.2321 12.4186 9.98721 12.0964 9.73804L11.9847 9.65642C11.4563 9.25689 10.9322 8.86167 10.4038 8.46214C10.3952 8.45355 10.3909 8.44925 10.3866 8.44925C10.3866 8.44496 10.3866 8.44066 10.3866 8.43207C10.3909 7.91226 10.3909 7.37956 10.3909 6.86834C10.3909 6.69651 10.3909 6.52467 10.3909 6.34853V5.71273C10.3909 5.23158 10.3909 4.74614 10.3909 4.2607Z"
                        fill="#828282"
                    />
                </svg>{" "}
                Updated {calculateHoursAgo(job.createdAt)} hours ago
            </a>
        </div>
    </div>
</div>
:

<div>
                <h5>You need to Subscribe First to view your Applied jobs.</h5>
                 <div className="contact-form-btn">
                 <button type="button" onClick={handleNavigateToSubscription}>
                    Go to Subscription Page
                  </button>
                </div>
               </div>
}
</div>
 ))
            // ) : (
            //     <div>
            //     <h5>You need to Subscribe First to view your Applied jobs.</h5>
            //     <div className="contact-form-btn">
            //       <button type="button" onClick={handleNavigateToSubscription}>
            //         Go to Subscription Page
            //       </button>
            //     </div>
            //   </div>
            // )
            
            }


        </>
    );
};

export default Cardah3;
