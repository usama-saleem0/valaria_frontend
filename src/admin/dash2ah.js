import React, { useEffect, useState } from "react";


import logo from "../img/karc-abc-logo.png";
import axios from "axios";
import { baseurl } from "../baseurl";
import { toast, ToastContainer } from "react-toastify";



const Dash2ah = () => {
  const cards = Array.from({ length: 5 }); // Create an array with 8 elements
  const [sortOrder, setSortOrder] = useState("newest");


  const sortratings = (rating) => {
    return rating.sort((a, b) => {
      const dateA = new Date(a.createdAt);  // Use createdAt for sorting
      const dateB = new Date(b.createdAt);
      console.log('BAsit', sortOrder)

      if (sortOrder === 'Newest') {
        return dateB - dateA;
      } else {
        return dateA - dateB;  // Sort by oldest first
      }
    });
  };

  const [userdata, setUser] = useState([]);


  useEffect(() => {


    fetchUserData();

  }, []);


  const Approval = async (e) => {

    console.log("iiii", e);
    const id = e;

    try {
      const response = await axios.post(`${baseurl}/approvenewsroombyadmin`, { id });
      console.log('response', response)
      fetchUserData();
      toast.success('NewsRoom Approved Successfully')

    } catch (error) {
      console.error("Error fetching user data:", error);
    }

  }

  const fetchUserData = async () => {
    try {
      const response = await axios.get(`${baseurl}/newsroomusers`);
      console.log('response', response)
      setUser(response.data.message);
    } catch (error) {
      console.error("Error fetching user data:", error);
    }
  };


  return (

    <>

      <section className="ah1">
        <ToastContainer />

        <div className="ahd-box-1">
          <h2>New NewsRoom Approval Request</h2>
          <p>All requests will be automatically approved if you don't take action within 10 days</p>

          <div className="ahd-box-btn">


            {/* <div className="ahd-box-btn-card">
                    <button>Approve all</button>
                    <button className="Deny">Deny all</button>
                </div> */}


            <div class="filter-box">
              <p>Sort:</p>
              <select
                name="sortOrder"
                id="sortOrder"
                value={sortOrder}
                onChange={(e) => setSortOrder(e.target.value)}
              >
                <option value="Newest">Newest</option>
                <option value="Oldest">Oldest</option>
              </select>
            </div>



          </div>


        </div>


        <div className="ahd-box-2">
          {sortratings(userdata).map((hello, index) => (
            <div className="ahd-card" key={index}>

              <div className="ahd-card-head">
                <p><span>Username:{hello.username}</span> </p>

                <span className="approved-s"><svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none">
                  <path d="M16.9647 8.36608C16.8831 9.75797 16.5222 11.0081 15.8864 12.0821C15.2463 13.1647 14.3184 14.0797 13.137 14.7928C11.8139 15.5919 10.4306 16 9.03439 16C7.89167 16 6.71887 15.7251 5.55037 15.1881C4.4592 14.6854 3.51839 13.9036 2.74941 12.8554C2.47017 12.473 2.52602 12.0048 2.88259 11.7427C3.23915 11.4764 3.70311 11.5623 3.98665 11.936C4.9962 13.2807 6.32794 14.0926 7.93893 14.3418C10.9891 14.8143 13.8888 13.1647 14.9886 10.325C16.1442 7.34364 14.9671 4.01428 12.1919 2.399C9.64442 0.925488 6.23343 1.45819 4.25729 3.65342C3.57423 4.4138 3.08879 5.28159 2.81815 6.24388C3.09309 6.13648 3.40669 6.19662 3.62579 6.41142C3.77614 6.55749 3.85777 6.74651 3.85777 6.94842C3.85777 7.15892 3.77185 7.36083 3.6129 7.52408C3.26922 7.87205 2.81385 8.32742 2.34559 8.78709C2.16946 8.96322 1.94607 9.04484 1.71838 9.02336C1.49499 9.00188 1.29738 8.8816 1.15991 8.67969C0.893559 8.28876 0.627209 7.88923 0.373748 7.50689C0.292125 7.38231 0.206206 7.25343 0.124583 7.12885C0.094511 7.08589 0.0730312 7.04293 0.0515515 7.00426C0.0429596 6.99138 0.0343676 6.97419 0.0257757 6.96131L0 6.90116V6.51453L0.0300717 6.45868C0.279237 5.98612 0.665873 5.81429 1.0654 5.99901C1.13843 6.03338 1.20287 6.08063 1.25871 6.13219C2.03199 3.15509 3.92221 1.20043 6.87353 0.315463C8.35134 -0.127021 9.93655 -0.101245 11.4573 0.397086C12.9695 0.891121 14.2755 1.79757 15.2378 3.02191C16.4965 4.62001 17.0764 6.42001 16.9647 8.36608ZM9.51984 3.66631C9.51984 3.19375 9.19764 2.85008 8.75086 2.84578H8.74656C8.54036 2.84578 8.35134 2.92311 8.20957 3.06058C8.05921 3.21094 7.97329 3.42144 7.97329 3.65772C7.97329 4.25056 7.97329 4.8434 7.97329 5.43624V5.5866C7.97329 6.45868 7.97329 7.33505 7.97329 8.20713C7.97329 8.50785 8.09788 8.75272 8.34274 8.93315C8.77234 9.24675 9.20194 9.57325 9.62294 9.88685C9.77759 10.0028 9.93654 10.1231 10.0912 10.2391C10.2244 10.3379 10.3575 10.441 10.495 10.5398C10.7786 10.7503 11.0578 10.9651 11.3413 11.1713C11.4874 11.283 11.6463 11.3346 11.8096 11.3346C11.9471 11.3346 12.0845 11.2959 12.2134 11.2143C12.484 11.0511 12.6172 10.7632 12.57 10.4367C12.5313 10.1661 12.3552 9.99855 12.2005 9.88256C11.874 9.63769 11.5475 9.39282 11.2253 9.14365L11.1136 9.06203C10.5852 8.6625 10.0611 8.26728 9.53272 7.86775C9.52413 7.85916 9.51984 7.85486 9.51554 7.85486C9.51554 7.85057 9.51554 7.84627 9.51554 7.83768C9.51984 7.31787 9.51984 6.78517 9.51984 6.27395C9.51984 6.10211 9.51984 5.93028 9.51984 5.75414V5.11834C9.51984 4.63719 9.51984 4.15175 9.51984 3.66631Z" fill="#828282" />
                </svg><p> automatically approved in 3 days</p></span>
              </div>

              <div className="ahd-card-body">
                <div className="ahd-card-body-start">
                  <div className="ahd-card-body-start-1">
                    <div className="sevenplus">
                      <img src={logo} alt="" />
                    </div>
                    <span>
                      <h2>{hello.username}</h2>
                      <p>{hello.stationtype} </p>
                    </span>
                  </div>
                  <div className="ahd-card-body-start-btn">
                    {
                      hello.verified_account == 1 ?
                        <button style={{ background: '#89c400', border: 'none' }}>Approved</button>
                        :
                        <button onClick={() => Approval(hello.id)}>Approve</button>

                    }
                    <button className="Deny">Deny</button>
                  </div>
                </div>

                <div className="ahd-card-body-end">
                  <span>
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="20" viewBox="0 0 25 20" fill="none">
                      <path d="M0 5.50036C1.5873 6.52058 3.18182 7.54079 4.76912 8.56101C7.04185 10.0228 9.32179 11.4846 11.5945 12.9616C12.2006 13.3575 12.7706 13.3499 13.3766 12.9616C17.1501 10.5253 20.9235 8.10419 24.7042 5.67547C24.7836 5.62218 24.8701 5.56888 25 5.49275C25 5.61456 25 5.70593 25 5.78968C25 8.99498 25 12.1927 25 15.398C25 17.7582 23.4055 19.4408 21.1472 19.4408C15.8225 19.4408 10.4906 19.4408 5.16595 19.4408C4.45887 19.4408 3.74459 19.4712 3.05195 19.357C1.47908 19.1058 0.2886 17.781 0.050505 16.1441C0.04329 16.0984 0.021645 16.0527 0 16.0071C0 12.5048 0 9.00259 0 5.50036ZM3.81674 0.0033838C2.06349 0.0109973 0.627706 1.12257 0.17316 2.81278C0.122655 2.99551 0.151515 3.08687 0.30303 3.18584C4.32179 5.75922 8.33333 8.34021 12.3377 10.9212C12.4675 11.005 12.5613 10.9973 12.684 10.9136C13.1674 10.5938 13.6508 10.2817 14.1414 9.96951C17.6407 7.70829 21.14 5.45468 24.6465 3.20107C24.8268 3.08687 24.8846 2.97267 24.798 2.77471C24.697 2.53108 24.632 2.27222 24.5022 2.04381C23.7734 0.680989 22.6479 0.0109973 21.1616 0.0033838C18.2756 -0.00422975 15.3896 0.0033838 12.4964 0.0033838C9.60318 0.0033838 6.70996 0.0033838 3.81674 0.0033838Z" fill="#828282" />
                    </svg>
                    <p>{hello.email}</p>
                  </span>


                  <span>
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                      <path d="M0 13.2251C0 12.7415 0 12.2485 0 11.765C0.01897 11.6797 0.028455 11.5944 0.047425 11.5091C0.123305 10.9687 0.17073 10.4283 0.28455 9.89735C0.939014 6.90147 2.47558 4.43651 4.92271 2.58778C7.96739 0.283988 11.3915 -0.483943 15.1286 0.293469C18.1163 0.919191 20.5445 2.4835 22.4036 4.90106C24.4144 7.50823 25.2491 10.4757 24.936 13.7465C24.68 16.3916 23.6556 18.7333 21.8914 20.7337C19.9564 22.9237 17.5472 24.289 14.6638 24.8009C14.1896 24.8862 13.7153 24.9336 13.2411 25C12.7573 25 12.2641 25 11.7804 25C11.714 24.9905 11.6571 24.9621 11.5907 24.9621C9.63675 24.8199 7.80615 24.2605 6.13679 23.2461C2.90241 21.2646 0.901074 18.4015 0.20867 14.6661C0.104335 14.1731 0.066395 13.6991 0 13.2251ZM17.2911 9.48968C17.4714 11.5091 17.4619 13.4905 17.2911 15.4909C18.8562 15.7374 20.3643 16.0787 21.8345 16.695C23.0296 13.8792 23.0296 11.0919 21.8345 8.28564C20.3643 8.90189 18.8562 9.24319 17.2911 9.48968ZM7.7113 9.48968C6.14628 9.24319 4.63816 8.90188 3.20593 8.3046C1.99185 10.2671 2.00133 15.0453 3.21541 16.6855C4.64765 16.0882 6.16525 15.7469 7.7113 15.5004C7.54057 13.4905 7.54057 11.5091 7.7113 9.48968ZM9.96873 15.197C11.676 15.197 13.3549 15.197 15.0337 15.197C15.1855 13.3957 15.1855 11.5754 15.0337 9.79306C13.3264 9.79306 11.6571 9.79306 9.96873 9.79306C9.81697 11.5944 9.81697 13.3957 9.96873 15.197ZM14.7492 7.47979C14.7302 7.3755 14.7112 7.30914 14.7017 7.25225C14.4741 6.04821 14.1896 4.85365 13.6679 3.73494C13.4497 3.26091 13.2031 2.80584 12.8047 2.44557C12.5676 2.22752 12.4253 2.22752 12.1977 2.44557C12.0365 2.59726 11.8942 2.76791 11.7804 2.94805C10.8983 4.32274 10.5663 5.88704 10.2628 7.47979C11.7614 7.59356 13.2411 7.59356 14.7492 7.47979ZM10.2438 17.4724C10.3007 17.7663 10.3481 18.0033 10.3956 18.2308C10.6327 19.4443 10.9647 20.6389 11.5717 21.7197C11.7519 22.0326 11.9985 22.3075 12.2356 22.5824C12.3874 22.7531 12.5866 22.7531 12.7478 22.5824C12.9091 22.4118 13.0798 22.2411 13.2126 22.0515C13.7722 21.2172 14.0852 20.2786 14.3413 19.3211C14.4931 18.7333 14.6164 18.1265 14.7587 17.4724C13.2411 17.4724 11.7614 17.4724 10.2438 17.4724ZM4.35361 6.32315C5.54872 6.77822 6.75332 7.04368 7.95791 7.22381C8.13812 6.45588 8.2804 5.71639 8.48907 4.98638C8.68825 4.25637 8.95383 3.55481 9.20044 2.8248C7.24654 3.5074 5.64357 4.67352 4.35361 6.32315ZM4.35361 18.6669C5.63409 20.326 7.23705 21.4827 9.24787 22.1843C8.60289 20.7337 8.25194 19.2737 7.98636 17.7568C6.74383 17.9464 5.53924 18.2119 4.35361 18.6669ZM15.7451 22.1843C17.7559 21.4827 19.3589 20.3166 20.6393 18.6669C19.4442 18.2119 18.2491 17.9464 17.0066 17.7568C16.741 19.2737 16.3901 20.7432 15.7451 22.1843ZM15.802 2.8248C16.0486 3.56429 16.3047 4.26585 16.5039 4.98638C16.7126 5.71639 16.8548 6.46536 17.035 7.22381C18.2491 7.0342 19.4632 6.77822 20.6393 6.31367C19.3589 4.67352 17.7559 3.5074 15.802 2.8248Z" fill="#828282" />
                    </svg>  <p>station-website.com</p>
                  </span>
                </div>

              </div>

            </div>
          ))}
        </div>


      </section>

    </>

  )

}



export default Dash2ah